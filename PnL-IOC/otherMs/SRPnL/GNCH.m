function [R, t, err] = GNCH(xs, xe, Pn1_w, Pn2_w, R0, cH)

%first compute the weight of each line and the normal of the interpretation plane passing through to camera center and the line 

 
neLine = length(xs);
n_c=xnorm(cross(xs,xe));

Q=zeros(2*neLine,10);
N=zeros(2*neLine,3);
nx=n_c(1,:)'; ny=n_c(2,:)'; nz=n_c(3,:)';
Px=Pn1_w(1,:)'; Py=Pn1_w(2,:)'; Pz=Pn1_w(3,:)';
Q(1:2:end,:)=[Px.*nx+Py.*ny+Pz.*nz,...
          2*Py.*nz-2*Pz.*ny,...
          2*Pz.*nx-2*Px.*nz,...
          2*Px.*ny-2*Py.*nx,...
          Px.*nx-Py.*ny-Pz.*nz,...
          2.*Px.*ny+2*Py.*nx,...
          2.*Px.*nz+2*Pz.*nx,...
          Py.*ny-Px.*nx-Pz.*nz,...
          2*Py.*nz+2*Pz.*ny,...
          Pz.*nz-Px.*nx-Py.*ny];
Px=Pn2_w(1,:)'; Py=Pn2_w(2,:)'; Pz=Pn2_w(3,:)';
Q(2:2:end,:)=[Px.*nx+Py.*ny+Pz.*nz,...
          2*Py.*nz-2*Pz.*ny,...
          2*Pz.*nx-2*Px.*nz,...
          2*Px.*ny-2*Py.*nx,...
          Px.*nx-Py.*ny-Pz.*nz,...
          2.*Px.*ny+2*Py.*nx,...
          2.*Px.*nz+2*Pz.*nx,...
          Py.*ny-Px.*nx-Pz.*nz,...
          2*Py.*nz+2*Pz.*ny,...
          Pz.*nz-Px.*nx-Py.*ny];
N(1:2:end,:)=-n_c.';
N(2:2:end,:)=-n_c.';

if abs(det(N.'*N)) < 2e-10
    CC=(pinv(N.'*N)*N.')*Q;
else
    CC=((N.'*N)\N.')*Q;
end

EE=Q-N*CC;
GG=EE.'*EE;


s0 = CGR(R0);

s1=s0(1);
s2=s0(2);
s3=s0(3);
factor=1/(1+s1^2+s2^2+s3^2);
sr=[1,s1,s2,s3,s1^2,s1*s2,s1*s3,s2^2,s2*s3,s3^2]';
th = [2*s1*s2-2*s3, 1-s1^2+s2^2-s3^2, 2*s2*s3+2*s1];
err = sr' * GG * sr;

s= GaussNewton(GG,CC,s0,cH);

R= CGR2(s);
s1=s(1);
s2=s(2);
s3=s(3);
factor=1/(1+s1^2+s2^2+s3^2);
sr=[1,s1,s2,s3,s1^2,s1*s2,s1*s3,s2^2,s2*s3,s3^2]';

t=factor*CC*sr; 

err = sr' * GG * sr;

return

function c = xcross(a,b)

c = [a(2)*b(3)-a(3)*b(2);
     a(3)*b(1)-a(1)*b(3);
     a(1)*b(2)-a(2)*b(1)];
 
return
 
function s= CGR(R)

A= R.';

q4= sqrt(1+A(1,1)+A(2,2)+A(3,3))/2;

if q4 > 0.01
	q1= (A(3,2)-A(2,3))/q4/4;
	q2= (A(1,3)-A(3,1))/q4/4;
	q3= (A(2,1)-A(1,2))/q4/4;
else
	q1= sqrt(1+A(1,1)-A(2,2)-A(3,3))/2;
	q2= (A(1,2)+A(2,1))/q1/4;
	q3= (A(1,3)+A(3,1))/q1/4;
	q4= (A(3,2)-A(2,3))/q1/4;
end

s= -[q1; q2; q3]/q4;

return

function R= CGR2(s)

s1= s(1);
s2= s(2);
s3= s(3);

R= [1+s1^2-s2^2-s3^2,   2*s1*s2-2*s3,   2*s2+2*s1*s3;
    2*s3+2*s1*s2,   1-s1^2+s2^2-s3^2,   2*s2*s3-2*s1;
    2*s1*s3-2*s2,   2*s1+2*s2*s3,   1-s1^2-s2^2+s3^2];
 
R= R/(1+s1*s1+s2*s2+s3*s3);

return

function s= GaussNewton(m,c,s0,cH)

A1= [...
4*m(45)- 4*c(15);
6*c(5) - 3*c(16) + 3*m(46) + 3*m(55);
3*m(47) + 3*m(65) - 3*c(17);
3*m(15)+ 3*m(42) - 3*c(12) - 6*c(25);
4*c(6) + 2*c(15) - 2*c(18) + 2*m(48) + 2*m(56) + 2*m(75);
4*c(7) - 2*c(19) + 4*c(25) + 2*m(49) + 2*m(57) + 2*m(66) + 2*m(85);
4*c(2) - 2*c(13) - 4*c(26) + 2*m(16) + 2*m(25) + 2*m(43) + 2*m(52);
2*m(50) + 2*m(67) + 2*m(95) - 2*c(15) - 2*c(20);
2*m(17) + 2*m(35) + 2*m(44) + 2*m(62) - 2*c(14) - 4*c(27);
2*m(5) + 2*m(12) + 2*m(41) - 2*c(11) + 2*c(15) - 4*c(22) + 2*cH;
2*c(8) + c(16) + m(58) + m(76);
2*c(9) + c(17)+ 2*c(26)+ m(59) + m(68) + m(77) + m(86);
2*c(3) + c(12) - 2*c(28) + m(18) + m(26) + m(53) + m(72);
2*c(10) - c(16) + 2*c(27) + m(60) + m(69) + m(87) + m(96);
2*c(4) + 2*c(22) - 2*c(29) + m(19) + m(27) + m(36) + m(54) + m(63) + m(82);
2*c(1) + c(16) - 2*c(23) + m(6) + m(13) + m(22) + m(51);
m(70) + m(97) - c(17);
m(20) + m(37)+ m(64) + m(92) - c(12) - 2*c(30);
c(17) - 2*c(24) + m(7) + m(14) + m(32) + m(61);
c(12) - 2*c(21) + m(2) + m(11)];

A2= [...
2*c(5) - c(16)+ m(46) + m(55);
4*c(6) + 2*c(15) - 2*c(18) + 2*m(48) + 2*m(56) + 2*m(75);
2*c(7) - c(19) + 2*c(25) + m(49) + m(57) + m(66) + m(85);
2*c(2) - c(13) - 2*c(26) + m(16) + m(25) + m(43) + m(52);
6*c(8) + 3*c(16) + 3*m(58) + 3*m(76);
4*c(9) + 2*c(17) + 4*c(26) + 2*m(59) + 2*m(68) + 2*m(77) + 2*m(86);
4*c(3) + 2*c(12) - 4*c(28) + 2*m(18) + 2*m(26) + 2*m(53) + 2*m(72);
2*c(10) - c(16) + 2*c(27) + m(60) + m(69) + m(87) + m(96);
2*c(4) + 2*c(22) - 2*c(29) + m(19) + m(27) + m(36) + m(54) + m(63) + m(82);
2*c(1) + c(16) - 2*c(23) + m(6) + m(13) + m(22) + m(51);
4*c(18)  + 4*m(78);
6*c(28) + 3*c(19) + 3*m(79) + 3*m(88);
3*c(13) + 3*m(28) + 3*m(73);
2*c(20) + 4*c(29) + 2*m(80) + 2*m(89) + 2*m(98) - 2*c(18);
2*c(14)+ 4*c(23) + 2*m(29) + 2*m(38) + 2*m(74) + 2*m(83);
2*c(11) + 2*c(18) + 2*cH+ 2*m(8) + 2*m(23) + 2*m(71);
2*c(30) + m(90) + m(99) - c(19);
2*c(24) + m(30) + m(39) + m(84) + m(93) - c(13);
c(19) + 2*c(21) + m(9) + m(24) + m(33) + m(81);
c(14) + m(4) + m(31)];

A3= [...
m(47) + m(65) - c(17);
2*c(7) - c(19) + 2*c(25) + m(49) + m(57) + m(66) + m(85);
2*m(50) + 2*m(67) + 2*m(95) - 2*c(15) - 2*c(20);
m(17) + m(35) + m(44) + m(62) - c(14) - 2*c(27);
2*c(9) + c(17) + 2*c(26) + m(59) + m(68) + m(77) + m(86);
4*c(10) - 2*c(16) + 4*c(27) + 2*m(60) + 2*m(69) + 2*m(87) + 2*m(96);
2*c(4) + 2*c(22) - 2*c(29) + m(19) + m(27) + m(36) + m(54) + m(63) + m(82);
3*m(70) + 3*m(97) - 3*c(17);
2*m(20) + 2*m(37) + 2*m(64) + 2*m(92) - 2*c(12) - 4*c(30);
c(17) - 2*c(24) + m(7) + m(14) + m(32) + m(61);
2*c(28) + c(19) + m(79) + m(88);
2*c(20) + 4*c(29) + 2*m(80) + 2*m(89) + 2*m(98) - 2*c(18);
c(14)+ 2*c(23) + m(29) + m(38) + m(74) + m(83);
6*c(30) + 3*m(90) + 3*m(99) - 3*c(19);
4*c(24) + 2*m(30) + 2*m(39) + 2*m(84) + 2*m(93) - 2*c(13);
c(19) + 2*c(21) + m(9) + m(24) + m(33) + m(81);
4*m(100) - 4*c(20);
3*m(40) + 3*m(94) - 3*c(14);
2*c(20) + 2*cH + 2*m(10) + 2*m(34) + 2*m(91) - 2*c(11);
c(14) + m(4) + m(31)];

s= s0;

pref= 10000;

for i= 1:100
    
    s1= s(1);
    s2= s(2);
    s3= s(3);

    vecs= [s1^3 , s1^2*s2 , s1^2*s3 , s1^2 , s1*s2^2 , s1*s2*s3 , s1*s2 , s1*s3^2 , s1*s3 , s1 , s2^3 , s2^2*s3 , s2^2 , s2*s3^2 , s2*s3 , s2 , s3^3 , s3^2 , s3 , 1];

    vecs1= [ 3*s1^2, 2*s1*s2, 2*s1*s3, 2*s1, s2^2, s2*s3, s2, s3^2, s3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    vecs2= [ 0, s1^2, 0, 0, 2*s1*s2, s1*s3, s1, 0, 0, 0, 3*s2^2, 2*s2*s3, 2*s2, s3^2, s3, 1, 0, 0, 0, 0];
    vecs3= [ 0, 0, s1^2, 0, 0, s1*s2, 0, 2*s1*s3, s1, 0, 0, s2^2, 0, 2*s2*s3, s2, 0, 3*s3^2, 2*s3, 1, 0];

    f1= vecs*A1;
    f2= vecs*A2;
    f3= vecs*A3;

    curf= f1*f1+f2*f2+f3*f3;
    if curf > pref
	break;
    end

    pref= curf;

    f11= vecs1*A1;
    f12= vecs2*A1;
    f13= vecs3*A1;

    f21= vecs1*A2;
    f22= vecs2*A2;
    f23= vecs3*A2;

    f31= vecs1*A3;
    f32= vecs2*A3;
    f33= vecs3*A3;

    H= [f11 f12 f13; f21 f22 f23; f31 f32 f33];
    
    s= s- inv(H)*[f1; f2; f3];
    
end
